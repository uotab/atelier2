{"ast":null,"code":"/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport AccessibilityUtil from '../../modules/AccessibilityUtil';\nimport createDOMProps from '../../modules/createDOMProps';\nimport React from 'react';\nimport { LocaleProvider } from '../../modules/useLocale';\nvar createElement = (component, props, options) => {\n  // Use equivalent platform elements where possible.\n  var accessibilityComponent;\n  if (component && component.constructor === String) {\n    accessibilityComponent = AccessibilityUtil.propsToAccessibilityComponent(props);\n  }\n  var Component = accessibilityComponent || component;\n  var domProps = createDOMProps(Component, props, options);\n  var element = /*#__PURE__*/React.createElement(Component, domProps); // Update locale context if element's writing direction prop changes\n\n  var elementWithLocaleProvider = domProps.dir ? /*#__PURE__*/React.createElement(LocaleProvider, {\n    children: element,\n    direction: domProps.dir,\n    locale: domProps.lang\n  }) : element;\n  return elementWithLocaleProvider;\n};\nexport default createElement;","map":{"version":3,"names":["AccessibilityUtil","createDOMProps","React","LocaleProvider","createElement","component","props","options","accessibilityComponent","constructor","String","propsToAccessibilityComponent","Component","domProps","element","elementWithLocaleProvider","dir","children","direction","locale","lang"],"sources":["C:/Users/Luc/Documents/ecole/2022_2023/ASI2/Atelier2/atelier2/frontend/node_modules/react-native-web/dist/exports/createElement/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport AccessibilityUtil from '../../modules/AccessibilityUtil';\r\nimport createDOMProps from '../../modules/createDOMProps';\r\nimport React from 'react';\r\nimport { LocaleProvider } from '../../modules/useLocale';\r\n\r\nvar createElement = (component, props, options) => {\r\n  // Use equivalent platform elements where possible.\r\n  var accessibilityComponent;\r\n\r\n  if (component && component.constructor === String) {\r\n    accessibilityComponent = AccessibilityUtil.propsToAccessibilityComponent(props);\r\n  }\r\n\r\n  var Component = accessibilityComponent || component;\r\n  var domProps = createDOMProps(Component, props, options);\r\n  var element = /*#__PURE__*/React.createElement(Component, domProps); // Update locale context if element's writing direction prop changes\r\n\r\n  var elementWithLocaleProvider = domProps.dir ? /*#__PURE__*/React.createElement(LocaleProvider, {\r\n    children: element,\r\n    direction: domProps.dir,\r\n    locale: domProps.lang\r\n  }) : element;\r\n  return elementWithLocaleProvider;\r\n};\r\n\r\nexport default createElement;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,yBAAyB;AAExD,IAAIC,aAAa,GAAG,CAACC,SAAS,EAAEC,KAAK,EAAEC,OAAO,KAAK;EACjD;EACA,IAAIC,sBAAsB;EAE1B,IAAIH,SAAS,IAAIA,SAAS,CAACI,WAAW,KAAKC,MAAM,EAAE;IACjDF,sBAAsB,GAAGR,iBAAiB,CAACW,6BAA6B,CAACL,KAAK,CAAC;EACjF;EAEA,IAAIM,SAAS,GAAGJ,sBAAsB,IAAIH,SAAS;EACnD,IAAIQ,QAAQ,GAAGZ,cAAc,CAACW,SAAS,EAAEN,KAAK,EAAEC,OAAO,CAAC;EACxD,IAAIO,OAAO,GAAG,aAAaZ,KAAK,CAACE,aAAa,CAACQ,SAAS,EAAEC,QAAQ,CAAC,CAAC,CAAC;;EAErE,IAAIE,yBAAyB,GAAGF,QAAQ,CAACG,GAAG,GAAG,aAAad,KAAK,CAACE,aAAa,CAACD,cAAc,EAAE;IAC9Fc,QAAQ,EAAEH,OAAO;IACjBI,SAAS,EAAEL,QAAQ,CAACG,GAAG;IACvBG,MAAM,EAAEN,QAAQ,CAACO;EACnB,CAAC,CAAC,GAAGN,OAAO;EACZ,OAAOC,yBAAyB;AAClC,CAAC;AAED,eAAeX,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}