{"ast":null,"code":"/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\n'use strict';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nclass AnimatedTransform extends AnimatedWithChildren {\n  constructor(transforms) {\n    super();\n    this._transforms = transforms;\n  }\n  __makeNative() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n    });\n    super.__makeNative();\n  }\n  __getValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n  __getAnimatedValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getAnimatedValue();\n        } else {\n          // All transform components needed to recompose matrix\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n  __attach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n  __detach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n  __getNativeConfig() {\n    var transConfigs = [];\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag()\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value)\n          });\n        }\n      }\n    });\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs\n    };\n  }\n}\nexport default AnimatedTransform;","map":{"version":3,"names":["AnimatedNode","AnimatedWithChildren","NativeAnimatedHelper","AnimatedTransform","constructor","transforms","_transforms","__makeNative","forEach","transform","key","value","__getValue","map","result","__getAnimatedValue","__attach","__addChild","__detach","__removeChild","__getNativeConfig","transConfigs","push","type","property","nodeTag","__getNativeTag","transformDataType","validateTransform"],"sources":["C:/Users/Luc/Documents/ecole/2022_2023/ASI2/Atelier2/atelier2/frontend/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedTransform.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n'use strict';\r\n\r\nimport AnimatedNode from './AnimatedNode';\r\nimport AnimatedWithChildren from './AnimatedWithChildren';\r\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\r\n\r\nclass AnimatedTransform extends AnimatedWithChildren {\r\n  constructor(transforms) {\r\n    super();\r\n    this._transforms = transforms;\r\n  }\r\n\r\n  __makeNative() {\r\n    this._transforms.forEach(transform => {\r\n      for (var key in transform) {\r\n        var value = transform[key];\r\n\r\n        if (value instanceof AnimatedNode) {\r\n          value.__makeNative();\r\n        }\r\n      }\r\n    });\r\n\r\n    super.__makeNative();\r\n  }\r\n\r\n  __getValue() {\r\n    return this._transforms.map(transform => {\r\n      var result = {};\r\n\r\n      for (var key in transform) {\r\n        var value = transform[key];\r\n\r\n        if (value instanceof AnimatedNode) {\r\n          result[key] = value.__getValue();\r\n        } else {\r\n          result[key] = value;\r\n        }\r\n      }\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  __getAnimatedValue() {\r\n    return this._transforms.map(transform => {\r\n      var result = {};\r\n\r\n      for (var key in transform) {\r\n        var value = transform[key];\r\n\r\n        if (value instanceof AnimatedNode) {\r\n          result[key] = value.__getAnimatedValue();\r\n        } else {\r\n          // All transform components needed to recompose matrix\r\n          result[key] = value;\r\n        }\r\n      }\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  __attach() {\r\n    this._transforms.forEach(transform => {\r\n      for (var key in transform) {\r\n        var value = transform[key];\r\n\r\n        if (value instanceof AnimatedNode) {\r\n          value.__addChild(this);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  __detach() {\r\n    this._transforms.forEach(transform => {\r\n      for (var key in transform) {\r\n        var value = transform[key];\r\n\r\n        if (value instanceof AnimatedNode) {\r\n          value.__removeChild(this);\r\n        }\r\n      }\r\n    });\r\n\r\n    super.__detach();\r\n  }\r\n\r\n  __getNativeConfig() {\r\n    var transConfigs = [];\r\n\r\n    this._transforms.forEach(transform => {\r\n      for (var key in transform) {\r\n        var value = transform[key];\r\n\r\n        if (value instanceof AnimatedNode) {\r\n          transConfigs.push({\r\n            type: 'animated',\r\n            property: key,\r\n            nodeTag: value.__getNativeTag()\r\n          });\r\n        } else {\r\n          transConfigs.push({\r\n            type: 'static',\r\n            property: key,\r\n            value: NativeAnimatedHelper.transformDataType(value)\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    NativeAnimatedHelper.validateTransform(transConfigs);\r\n    return {\r\n      type: 'transform',\r\n      transforms: transConfigs\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport default AnimatedTransform;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}